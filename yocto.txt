###TODO####
Add mount dirs from lectbt - done
Compare lecbt and sxbti config files

To Add:
Enter 0 to disable this mechanism and allow ACPI to run by default no matter what the year. (default)
CONFIG_ACPI_BLACKLIST_YEAR=0 
CONFIG_ACPI_PROC_EVENT=y
CONFIG_ARCH_CPU_PROBE_RELEASE=y
CONFIG_ARCH_HAS_CPU_AUTOPROBE=y
CONFIG_ARCH_HAS_DEFAULT_IDLE=y
CONFIG_ARCH_SUPPORTS_MSI=y
CONFIG_DVB_TUNER_DIB0070=m
CONFIG_DVB_TUNER_DIB0090=m
CONFIG_DW_DMAC=y
CONFIG_EFI_VARS=y
CONFIG_EVENT_POWER_TRACING_DEPRECATED=y
CONFIG_EXPERIMENTAL=y
CONFIG_GART_IOMMU=y
CONFIG_GENERIC_HARDIRQS=y
CONFIG_GENERIC_SIGALTSTACK=y

not needed
CONFIG_GENERIC_GPIO=y		????
CONFIG_GPIO_ICH=y
CONFIG_GPIO_PCA953X_IRQ=y
CONFIG_GPIO_PCA953X=y
CONFIG_HAS_IOPORT=y

CONFIG_HAVE_GENERIC_HARDIRQS=y
CONFIG_HAVE_IRQ_WORK=y
CONFIG_HAVE_TEXT_POKE_SMP=y


CONFIG_I2C_CHARDEV=y
CONFIG_I2C_DESIGNWARE_CORE=y
CONFIG_I2C_DESIGNWARE_PCI=y
CONFIG_I2C_DESIGNWARE_PLATFORM=y
CONFIG_I2C_EG20T=y
CONFIG_I2C_I801=y
CONFIG_I2C_INTEL_MID=y
CONFIG_I2C_ISCH=y
CONFIG_I2C_MUX_GPIO=y
CONFIG_I2C_MUX_PCA9541=y
CONFIG_I2C_MUX_PCA954x=y
CONFIG_I2C_MUX=y
CONFIG_I2C_OCORES=y
CONFIG_I2C_PARPORT_LIGHT=y
CONFIG_I2C_PCA_PLATFORM=y
CONFIG_I2C_PIIX4=y
CONFIG_I2C_SCMI=y
CONFIG_I2C_SMBUS=y
CONFIG_I6300ESB_WDT=y
CONFIG_IE6XX_WDT=y
CONFIG_IP_NF_QUEUE=m
CONFIG_ITCO_VENDOR_SUPPORT=y
CONFIG_ITCO_WDT=y
CONFIG_LIBCRC32C=y
CONFIG_LPC_ICH=y
CONFIG_LPC_SCH=y
CONFIG_MFD_CORE=y
CONFIG_NR_CPUS=8
CONFIG_PHYSICAL_ALIGN=0x1000000

CONFIG_PWM_LPSS_PCI=y
CONFIG_PWM_LPSS=y
CONFIG_SOFT_WATCHDOG=y
CONFIG_STEP_WISE=y
CONFIG_USB_ACM=y
CONFIG_USB_ARCH_HAS_EHCI=y
CONFIG_USB_ARCH_HAS_OHCI=y
CONFIG_USB_ARCH_HAS_XHCI=y
CONFIG_USB_ETH_RNDIS=y
CONFIG_USB_ETH=y
CONFIG_USB_LIBCOMPOSITE=y
CONFIG_USB_OTG_UTILS=y
CONFIG_USE_GENERIC_SMP_HELPERS=y











#STEP 0: enable virtualization in BIOS!

#install virtualization packages
sudo apt-get install -y qemu-kvm libvirt-bin virtinst bridge-utils cpu-checker


#create virtual machine with Ubuntu 14.04 and contunue on it

#install yocto prerequisites
sudo apt-get -y install socat gawk wget git-core diffstat unzip texinfo build-essential chrpath libsdl1.2-dev xterm libncurses5-dev g++

#get yocto sources Atom Web page https://www.yoctoproject.org/downloads/bsps/jethro20/valley-island
wget http://downloads.yoctoproject.org/releases/yocto/yocto-2.0.2/poky-jethro-14.0.2.tar.bz2
wget http://downloads.yoctoproject.org/releases/yocto/yocto-2.0/machines/valleyisland/valleyisland-4.0-jethro-2.0.tar.bz2?bsp=valley_island


tar xf poky-jethro-14.0.2.tar.bz2 
tar xf valleyisland-4.0-jethro-2.0.tar.bz2 
mv valleyisland-4.0-jethro-2.0 poky-jethro-14.0.2/meta-intel

#init build environment
cd poky-jethro
. ./oe-init-build-env

copy bblayers.conf and local.conf to build/conf ??OR?? meta-intel/conf (first try build/conf)
enable appropriate machine type in local.conf
adjust paths in bblayers.conf

#build
bitbake core-image-minimal


#output image is in
ls -l ~/poky-jethro/build/tmp/deploy/images/valleyisland-64/



#kernel modification and rebuild
bitbake linux-yocto -c menuconfig
bitbake linux-yocto -C compile

#hddimage rebuild ???
bitbake -c cleanall core-image-sato
bitbake core-image-sato



#kernel config location
/home/jackhab/poky-jethro/meta-intel/tmp/work/corei7-64-intel-common-poky-linux/linux-yocto/3.14.62+gitAUTOINC+189154c0ed_27d9a1914b-r0/linux-corei7-64-intel-common-standard-build/.config
/home/jenia/poky-jethro/build/tmp/work/corei7-64-intel-common-poky-linux/linux-yocto/3.14.62+gitAUTOINC+189154c0ed_27d9a1914b-r0/linux-corei7-64-intel-common-standard-build
                                                                         


#list core pre-diefined images
find meta -name 'core-image*'

#list layers
bitbake show-layers